

================================================================
== Vitis HLS Report for 'pooling_2x2_Block_entry_split_proc'
================================================================
* Date:           Wed May 14 11:16:38 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        pynq_pooling
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  3.163 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|        1|  8.000 ns|  8.000 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|    148|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        -|    -|       -|      -|    -|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       0|     41|    -|
|Register         |        -|    -|      51|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        0|    0|      51|    189|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      280|  220|  106400|  53200|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        0|    0|      ~0|     ~0|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------+----------+----+---+----+------------+------------+
    |     Variable Name     | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------+----------+----+---+----+------------+------------+
    |icmp_ln23_fu_56_p2     |      icmp|   0|  0|  15|           8|           8|
    |icmp_ln24_fu_76_p2     |      icmp|   0|  0|  15|           8|           8|
    |icmp_ln25_fu_136_p2    |      icmp|   0|  0|  15|           8|           8|
    |icmp_ln30_fu_96_p2     |      icmp|   0|  0|  15|           8|           8|
    |icmp_ln31_fu_116_p2    |      icmp|   0|  0|  15|           8|           8|
    |icmp_ln32_fu_147_p2    |      icmp|   0|  0|  15|           8|           8|
    |ap_block_state1        |        or|   0|  0|   2|           1|           1|
    |max1_fu_68_p3          |    select|   0|  0|   8|           1|           8|
    |max2_fu_88_p3          |    select|   0|  0|   8|           1|           8|
    |min1_fu_108_p3         |    select|   0|  0|   8|           1|           8|
    |min2_fu_128_p3         |    select|   0|  0|   8|           1|           8|
    |select_ln25_fu_140_p3  |    select|   0|  0|   8|           1|           8|
    |select_ln32_fu_151_p3  |    select|   0|  0|   8|           1|           8|
    |xor_ln23_fu_62_p2      |       xor|   0|  0|   2|           1|           2|
    |xor_ln24_fu_82_p2      |       xor|   0|  0|   2|           1|           2|
    |xor_ln30_fu_102_p2     |       xor|   0|  0|   2|           1|           2|
    |xor_ln31_fu_122_p2     |       xor|   0|  0|   2|           1|           2|
    +-----------------------+----------+----+---+----+------------+------------+
    |Total                  |          |   0|  0| 148|          59|         105|
    +-----------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +-----------+----+-----------+-----+-----------+
    |    Name   | LUT| Input Size| Bits| Total Bits|
    +-----------+----+-----------+-----+-----------+
    |ap_NS_fsm  |  14|          3|    1|          3|
    |ap_done    |   9|          2|    1|          2|
    |max_val    |   9|          2|    8|         16|
    |min_val    |   9|          2|    8|         16|
    +-----------+----+-----------+-----+-----------+
    |Total      |  41|          9|   18|         37|
    +-----------+----+-----------+-----+-----------+

    * Register: 
    +--------------+---+----+-----+-----------+
    |     Name     | FF| LUT| Bits| Const Bits|
    +--------------+---+----+-----+-----------+
    |ap_CS_fsm     |  2|   0|    2|          0|
    |ap_done_reg   |  1|   0|    1|          0|
    |max1_reg_158  |  8|   0|    8|          0|
    |max2_reg_164  |  8|   0|    8|          0|
    |max_val_preg  |  8|   0|    8|          0|
    |min1_reg_170  |  8|   0|    8|          0|
    |min2_reg_176  |  8|   0|    8|          0|
    |min_val_preg  |  8|   0|    8|          0|
    +--------------+---+----+-----+-----------+
    |Total         | 51|   0|   51|          0|
    +--------------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+------------+------------------------------------+--------------+
|        RTL Ports       | Dir | Bits|  Protocol  |            Source Object           |    C Type    |
+------------------------+-----+-----+------------+------------------------------------+--------------+
|ap_clk                  |   in|    1|  ap_ctrl_hs|  pooling_2x2_Block_entry.split_proc|  return value|
|ap_rst                  |   in|    1|  ap_ctrl_hs|  pooling_2x2_Block_entry.split_proc|  return value|
|ap_start                |   in|    1|  ap_ctrl_hs|  pooling_2x2_Block_entry.split_proc|  return value|
|ap_done                 |  out|    1|  ap_ctrl_hs|  pooling_2x2_Block_entry.split_proc|  return value|
|ap_continue             |   in|    1|  ap_ctrl_hs|  pooling_2x2_Block_entry.split_proc|  return value|
|ap_idle                 |  out|    1|  ap_ctrl_hs|  pooling_2x2_Block_entry.split_proc|  return value|
|ap_ready                |  out|    1|  ap_ctrl_hs|  pooling_2x2_Block_entry.split_proc|  return value|
|window_0_0_0_0_0_0_val  |   in|    8|     ap_none|              window_0_0_0_0_0_0_val|        scalar|
|window_0_1_0_0_0_0_val  |   in|    8|     ap_none|              window_0_1_0_0_0_0_val|        scalar|
|window_1_0_0_0_0_0_val  |   in|    8|     ap_none|              window_1_0_0_0_0_0_val|        scalar|
|window_1_1_0_0_0_0_val  |   in|    8|     ap_none|              window_1_1_0_0_0_0_val|        scalar|
|max_val                 |  out|    8|      ap_vld|                             max_val|       pointer|
|max_val_ap_vld          |  out|    1|      ap_vld|                             max_val|       pointer|
|min_val                 |  out|    8|      ap_vld|                             min_val|       pointer|
|min_val_ap_vld          |  out|    1|      ap_vld|                             min_val|       pointer|
+------------------------+-----+-----+------------+------------------------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.16>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%window_1_1_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_1_1_0_0_0_0_val" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 3 'read' 'window_1_1_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%window_1_0_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_1_0_0_0_0_0_val" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 4 'read' 'window_1_0_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%window_0_1_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_0_1_0_0_0_0_val" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 5 'read' 'window_0_1_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%window_0_0_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_0_0_0_0_0_0_val" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 6 'read' 'window_0_0_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (1.91ns)   --->   "%icmp_ln23 = icmp_ult  i8 %window_0_1_0_0_0_0_val_read, i8 %window_0_0_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 7 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node max1)   --->   "%xor_ln23 = xor i1 %icmp_ln23, i1 1" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 8 'xor' 'xor_ln23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (1.24ns) (out node of the LUT)   --->   "%max1 = select i1 %xor_ln23, i8 %window_0_1_0_0_0_0_val_read, i8 %window_0_0_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 9 'select' 'max1' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (1.91ns)   --->   "%icmp_ln24 = icmp_ult  i8 %window_1_1_0_0_0_0_val_read, i8 %window_1_0_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:24->pynq_pooling/source/pooling.cpp:40]   --->   Operation 10 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node max2)   --->   "%xor_ln24 = xor i1 %icmp_ln24, i1 1" [pynq_pooling/source/pooling.cpp:24->pynq_pooling/source/pooling.cpp:40]   --->   Operation 11 'xor' 'xor_ln24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (1.24ns) (out node of the LUT)   --->   "%max2 = select i1 %xor_ln24, i8 %window_1_1_0_0_0_0_val_read, i8 %window_1_0_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:24->pynq_pooling/source/pooling.cpp:40]   --->   Operation 12 'select' 'max2' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (1.91ns)   --->   "%icmp_ln30 = icmp_ult  i8 %window_0_0_0_0_0_0_val_read, i8 %window_0_1_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:30->pynq_pooling/source/pooling.cpp:41]   --->   Operation 13 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node min1)   --->   "%xor_ln30 = xor i1 %icmp_ln30, i1 1" [pynq_pooling/source/pooling.cpp:30->pynq_pooling/source/pooling.cpp:41]   --->   Operation 14 'xor' 'xor_ln30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (1.24ns) (out node of the LUT)   --->   "%min1 = select i1 %xor_ln30, i8 %window_0_1_0_0_0_0_val_read, i8 %window_0_0_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:30->pynq_pooling/source/pooling.cpp:41]   --->   Operation 15 'select' 'min1' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.91ns)   --->   "%icmp_ln31 = icmp_ult  i8 %window_1_0_0_0_0_0_val_read, i8 %window_1_1_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:31->pynq_pooling/source/pooling.cpp:41]   --->   Operation 16 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node min2)   --->   "%xor_ln31 = xor i1 %icmp_ln31, i1 1" [pynq_pooling/source/pooling.cpp:31->pynq_pooling/source/pooling.cpp:41]   --->   Operation 17 'xor' 'xor_ln31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.24ns) (out node of the LUT)   --->   "%min2 = select i1 %xor_ln31, i8 %window_1_1_0_0_0_0_val_read, i8 %window_1_0_0_0_0_0_val_read" [pynq_pooling/source/pooling.cpp:31->pynq_pooling/source/pooling.cpp:41]   --->   Operation 18 'select' 'min2' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.16>
ST_2 : Operation 19 [1/1] (1.91ns)   --->   "%icmp_ln25 = icmp_ugt  i8 %max1, i8 %max2" [pynq_pooling/source/pooling.cpp:25->pynq_pooling/source/pooling.cpp:40]   --->   Operation 19 'icmp' 'icmp_ln25' <Predicate = true> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (1.24ns)   --->   "%select_ln25 = select i1 %icmp_ln25, i8 %max1, i8 %max2" [pynq_pooling/source/pooling.cpp:25->pynq_pooling/source/pooling.cpp:40]   --->   Operation 20 'select' 'select_ln25' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%write_ln25 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %max_val, i8 %select_ln25" [pynq_pooling/source/pooling.cpp:25->pynq_pooling/source/pooling.cpp:40]   --->   Operation 21 'write' 'write_ln25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.91ns)   --->   "%icmp_ln32 = icmp_ult  i8 %min1, i8 %min2" [pynq_pooling/source/pooling.cpp:32->pynq_pooling/source/pooling.cpp:41]   --->   Operation 22 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.24ns)   --->   "%select_ln32 = select i1 %icmp_ln32, i8 %min1, i8 %min2" [pynq_pooling/source/pooling.cpp:32->pynq_pooling/source/pooling.cpp:41]   --->   Operation 23 'select' 'select_ln32' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%write_ln32 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %min_val, i8 %select_ln32" [pynq_pooling/source/pooling.cpp:32->pynq_pooling/source/pooling.cpp:41]   --->   Operation 24 'write' 'write_ln32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 25 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ window_0_0_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ window_0_1_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ window_1_0_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ window_1_1_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ max_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
Port [ min_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
window_1_1_0_0_0_0_val_read (read  ) [ 000]
window_1_0_0_0_0_0_val_read (read  ) [ 000]
window_0_1_0_0_0_0_val_read (read  ) [ 000]
window_0_0_0_0_0_0_val_read (read  ) [ 000]
icmp_ln23                   (icmp  ) [ 000]
xor_ln23                    (xor   ) [ 000]
max1                        (select) [ 001]
icmp_ln24                   (icmp  ) [ 000]
xor_ln24                    (xor   ) [ 000]
max2                        (select) [ 001]
icmp_ln30                   (icmp  ) [ 000]
xor_ln30                    (xor   ) [ 000]
min1                        (select) [ 001]
icmp_ln31                   (icmp  ) [ 000]
xor_ln31                    (xor   ) [ 000]
min2                        (select) [ 001]
icmp_ln25                   (icmp  ) [ 000]
select_ln25                 (select) [ 000]
write_ln25                  (write ) [ 000]
icmp_ln32                   (icmp  ) [ 000]
select_ln32                 (select) [ 000]
write_ln32                  (write ) [ 000]
ret_ln0                     (ret   ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="window_0_0_0_0_0_0_val">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_0_0_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="window_0_1_0_0_0_0_val">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_0_1_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="window_1_0_0_0_0_0_val">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_1_0_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="window_1_1_0_0_0_0_val">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_1_1_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="max_val">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="max_val"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="min_val">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="min_val"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i8"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.i8P0A"/></StgValue>
</bind>
</comp>

<comp id="18" class="1004" name="window_1_1_0_0_0_0_val_read_read_fu_18">
<pin_list>
<pin id="19" dir="0" index="0" bw="8" slack="0"/>
<pin id="20" dir="0" index="1" bw="8" slack="0"/>
<pin id="21" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_1_1_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="24" class="1004" name="window_1_0_0_0_0_0_val_read_read_fu_24">
<pin_list>
<pin id="25" dir="0" index="0" bw="8" slack="0"/>
<pin id="26" dir="0" index="1" bw="8" slack="0"/>
<pin id="27" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_1_0_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="30" class="1004" name="window_0_1_0_0_0_0_val_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="8" slack="0"/>
<pin id="32" dir="0" index="1" bw="8" slack="0"/>
<pin id="33" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_0_1_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="window_0_0_0_0_0_0_val_read_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="8" slack="0"/>
<pin id="38" dir="0" index="1" bw="8" slack="0"/>
<pin id="39" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_0_0_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="42" class="1004" name="write_ln25_write_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="0" slack="0"/>
<pin id="44" dir="0" index="1" bw="8" slack="0"/>
<pin id="45" dir="0" index="2" bw="8" slack="0"/>
<pin id="46" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln25/2 "/>
</bind>
</comp>

<comp id="49" class="1004" name="write_ln32_write_fu_49">
<pin_list>
<pin id="50" dir="0" index="0" bw="0" slack="0"/>
<pin id="51" dir="0" index="1" bw="8" slack="0"/>
<pin id="52" dir="0" index="2" bw="8" slack="0"/>
<pin id="53" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln32/2 "/>
</bind>
</comp>

<comp id="56" class="1004" name="icmp_ln23_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="8" slack="0"/>
<pin id="58" dir="0" index="1" bw="8" slack="0"/>
<pin id="59" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23/1 "/>
</bind>
</comp>

<comp id="62" class="1004" name="xor_ln23_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="1" slack="0"/>
<pin id="64" dir="0" index="1" bw="1" slack="0"/>
<pin id="65" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln23/1 "/>
</bind>
</comp>

<comp id="68" class="1004" name="max1_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="1" slack="0"/>
<pin id="70" dir="0" index="1" bw="8" slack="0"/>
<pin id="71" dir="0" index="2" bw="8" slack="0"/>
<pin id="72" dir="1" index="3" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="max1/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="icmp_ln24_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="8" slack="0"/>
<pin id="78" dir="0" index="1" bw="8" slack="0"/>
<pin id="79" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln24/1 "/>
</bind>
</comp>

<comp id="82" class="1004" name="xor_ln24_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="1" slack="0"/>
<pin id="84" dir="0" index="1" bw="1" slack="0"/>
<pin id="85" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln24/1 "/>
</bind>
</comp>

<comp id="88" class="1004" name="max2_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="1" slack="0"/>
<pin id="90" dir="0" index="1" bw="8" slack="0"/>
<pin id="91" dir="0" index="2" bw="8" slack="0"/>
<pin id="92" dir="1" index="3" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="max2/1 "/>
</bind>
</comp>

<comp id="96" class="1004" name="icmp_ln30_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="8" slack="0"/>
<pin id="98" dir="0" index="1" bw="8" slack="0"/>
<pin id="99" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln30/1 "/>
</bind>
</comp>

<comp id="102" class="1004" name="xor_ln30_fu_102">
<pin_list>
<pin id="103" dir="0" index="0" bw="1" slack="0"/>
<pin id="104" dir="0" index="1" bw="1" slack="0"/>
<pin id="105" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln30/1 "/>
</bind>
</comp>

<comp id="108" class="1004" name="min1_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="1" slack="0"/>
<pin id="110" dir="0" index="1" bw="8" slack="0"/>
<pin id="111" dir="0" index="2" bw="8" slack="0"/>
<pin id="112" dir="1" index="3" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="min1/1 "/>
</bind>
</comp>

<comp id="116" class="1004" name="icmp_ln31_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="8" slack="0"/>
<pin id="118" dir="0" index="1" bw="8" slack="0"/>
<pin id="119" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln31/1 "/>
</bind>
</comp>

<comp id="122" class="1004" name="xor_ln31_fu_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="1" slack="0"/>
<pin id="124" dir="0" index="1" bw="1" slack="0"/>
<pin id="125" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln31/1 "/>
</bind>
</comp>

<comp id="128" class="1004" name="min2_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="1" slack="0"/>
<pin id="130" dir="0" index="1" bw="8" slack="0"/>
<pin id="131" dir="0" index="2" bw="8" slack="0"/>
<pin id="132" dir="1" index="3" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="min2/1 "/>
</bind>
</comp>

<comp id="136" class="1004" name="icmp_ln25_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="8" slack="1"/>
<pin id="138" dir="0" index="1" bw="8" slack="1"/>
<pin id="139" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25/2 "/>
</bind>
</comp>

<comp id="140" class="1004" name="select_ln25_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="1" slack="0"/>
<pin id="142" dir="0" index="1" bw="8" slack="1"/>
<pin id="143" dir="0" index="2" bw="8" slack="1"/>
<pin id="144" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln25/2 "/>
</bind>
</comp>

<comp id="147" class="1004" name="icmp_ln32_fu_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="8" slack="1"/>
<pin id="149" dir="0" index="1" bw="8" slack="1"/>
<pin id="150" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln32/2 "/>
</bind>
</comp>

<comp id="151" class="1004" name="select_ln32_fu_151">
<pin_list>
<pin id="152" dir="0" index="0" bw="1" slack="0"/>
<pin id="153" dir="0" index="1" bw="8" slack="1"/>
<pin id="154" dir="0" index="2" bw="8" slack="1"/>
<pin id="155" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln32/2 "/>
</bind>
</comp>

<comp id="158" class="1005" name="max1_reg_158">
<pin_list>
<pin id="159" dir="0" index="0" bw="8" slack="1"/>
<pin id="160" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="max1 "/>
</bind>
</comp>

<comp id="164" class="1005" name="max2_reg_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="8" slack="1"/>
<pin id="166" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="max2 "/>
</bind>
</comp>

<comp id="170" class="1005" name="min1_reg_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="8" slack="1"/>
<pin id="172" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="min1 "/>
</bind>
</comp>

<comp id="176" class="1005" name="min2_reg_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="8" slack="1"/>
<pin id="178" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="min2 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="22"><net_src comp="12" pin="0"/><net_sink comp="18" pin=0"/></net>

<net id="23"><net_src comp="6" pin="0"/><net_sink comp="18" pin=1"/></net>

<net id="28"><net_src comp="12" pin="0"/><net_sink comp="24" pin=0"/></net>

<net id="29"><net_src comp="4" pin="0"/><net_sink comp="24" pin=1"/></net>

<net id="34"><net_src comp="12" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="2" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="40"><net_src comp="12" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="0" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="47"><net_src comp="16" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="48"><net_src comp="8" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="54"><net_src comp="16" pin="0"/><net_sink comp="49" pin=0"/></net>

<net id="55"><net_src comp="10" pin="0"/><net_sink comp="49" pin=1"/></net>

<net id="60"><net_src comp="30" pin="2"/><net_sink comp="56" pin=0"/></net>

<net id="61"><net_src comp="36" pin="2"/><net_sink comp="56" pin=1"/></net>

<net id="66"><net_src comp="56" pin="2"/><net_sink comp="62" pin=0"/></net>

<net id="67"><net_src comp="14" pin="0"/><net_sink comp="62" pin=1"/></net>

<net id="73"><net_src comp="62" pin="2"/><net_sink comp="68" pin=0"/></net>

<net id="74"><net_src comp="30" pin="2"/><net_sink comp="68" pin=1"/></net>

<net id="75"><net_src comp="36" pin="2"/><net_sink comp="68" pin=2"/></net>

<net id="80"><net_src comp="18" pin="2"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="24" pin="2"/><net_sink comp="76" pin=1"/></net>

<net id="86"><net_src comp="76" pin="2"/><net_sink comp="82" pin=0"/></net>

<net id="87"><net_src comp="14" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="93"><net_src comp="82" pin="2"/><net_sink comp="88" pin=0"/></net>

<net id="94"><net_src comp="18" pin="2"/><net_sink comp="88" pin=1"/></net>

<net id="95"><net_src comp="24" pin="2"/><net_sink comp="88" pin=2"/></net>

<net id="100"><net_src comp="36" pin="2"/><net_sink comp="96" pin=0"/></net>

<net id="101"><net_src comp="30" pin="2"/><net_sink comp="96" pin=1"/></net>

<net id="106"><net_src comp="96" pin="2"/><net_sink comp="102" pin=0"/></net>

<net id="107"><net_src comp="14" pin="0"/><net_sink comp="102" pin=1"/></net>

<net id="113"><net_src comp="102" pin="2"/><net_sink comp="108" pin=0"/></net>

<net id="114"><net_src comp="30" pin="2"/><net_sink comp="108" pin=1"/></net>

<net id="115"><net_src comp="36" pin="2"/><net_sink comp="108" pin=2"/></net>

<net id="120"><net_src comp="24" pin="2"/><net_sink comp="116" pin=0"/></net>

<net id="121"><net_src comp="18" pin="2"/><net_sink comp="116" pin=1"/></net>

<net id="126"><net_src comp="116" pin="2"/><net_sink comp="122" pin=0"/></net>

<net id="127"><net_src comp="14" pin="0"/><net_sink comp="122" pin=1"/></net>

<net id="133"><net_src comp="122" pin="2"/><net_sink comp="128" pin=0"/></net>

<net id="134"><net_src comp="18" pin="2"/><net_sink comp="128" pin=1"/></net>

<net id="135"><net_src comp="24" pin="2"/><net_sink comp="128" pin=2"/></net>

<net id="145"><net_src comp="136" pin="2"/><net_sink comp="140" pin=0"/></net>

<net id="146"><net_src comp="140" pin="3"/><net_sink comp="42" pin=2"/></net>

<net id="156"><net_src comp="147" pin="2"/><net_sink comp="151" pin=0"/></net>

<net id="157"><net_src comp="151" pin="3"/><net_sink comp="49" pin=2"/></net>

<net id="161"><net_src comp="68" pin="3"/><net_sink comp="158" pin=0"/></net>

<net id="162"><net_src comp="158" pin="1"/><net_sink comp="136" pin=0"/></net>

<net id="163"><net_src comp="158" pin="1"/><net_sink comp="140" pin=1"/></net>

<net id="167"><net_src comp="88" pin="3"/><net_sink comp="164" pin=0"/></net>

<net id="168"><net_src comp="164" pin="1"/><net_sink comp="136" pin=1"/></net>

<net id="169"><net_src comp="164" pin="1"/><net_sink comp="140" pin=2"/></net>

<net id="173"><net_src comp="108" pin="3"/><net_sink comp="170" pin=0"/></net>

<net id="174"><net_src comp="170" pin="1"/><net_sink comp="147" pin=0"/></net>

<net id="175"><net_src comp="170" pin="1"/><net_sink comp="151" pin=1"/></net>

<net id="179"><net_src comp="128" pin="3"/><net_sink comp="176" pin=0"/></net>

<net id="180"><net_src comp="176" pin="1"/><net_sink comp="147" pin=1"/></net>

<net id="181"><net_src comp="176" pin="1"/><net_sink comp="151" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: max_val | {2 }
	Port: min_val | {2 }
 - Input state : 
	Port: pooling_2x2_Block_entry.split_proc : window_0_0_0_0_0_0_val | {1 }
	Port: pooling_2x2_Block_entry.split_proc : window_0_1_0_0_0_0_val | {1 }
	Port: pooling_2x2_Block_entry.split_proc : window_1_0_0_0_0_0_val | {1 }
	Port: pooling_2x2_Block_entry.split_proc : window_1_1_0_0_0_0_val | {1 }
	Port: pooling_2x2_Block_entry.split_proc : max_val | {}
	Port: pooling_2x2_Block_entry.split_proc : min_val | {}
  - Chain level:
	State 1
		xor_ln23 : 1
		max1 : 1
		xor_ln24 : 1
		max2 : 1
		xor_ln30 : 1
		min1 : 1
		xor_ln31 : 1
		min2 : 1
	State 2
		select_ln25 : 1
		write_ln25 : 2
		select_ln32 : 1
		write_ln32 : 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------------------|---------|---------|
| Operation|             Functional Unit            |    FF   |   LUT   |
|----------|----------------------------------------|---------|---------|
|          |             icmp_ln23_fu_56            |    0    |    15   |
|          |             icmp_ln24_fu_76            |    0    |    15   |
|   icmp   |             icmp_ln30_fu_96            |    0    |    15   |
|          |            icmp_ln31_fu_116            |    0    |    15   |
|          |            icmp_ln25_fu_136            |    0    |    15   |
|          |            icmp_ln32_fu_147            |    0    |    15   |
|----------|----------------------------------------|---------|---------|
|          |               max1_fu_68               |    0    |    8    |
|          |               max2_fu_88               |    0    |    8    |
|  select  |               min1_fu_108              |    0    |    8    |
|          |               min2_fu_128              |    0    |    8    |
|          |           select_ln25_fu_140           |    0    |    8    |
|          |           select_ln32_fu_151           |    0    |    8    |
|----------|----------------------------------------|---------|---------|
|          |             xor_ln23_fu_62             |    0    |    2    |
|    xor   |             xor_ln24_fu_82             |    0    |    2    |
|          |             xor_ln30_fu_102            |    0    |    2    |
|          |             xor_ln31_fu_122            |    0    |    2    |
|----------|----------------------------------------|---------|---------|
|          | window_1_1_0_0_0_0_val_read_read_fu_18 |    0    |    0    |
|   read   | window_1_0_0_0_0_0_val_read_read_fu_24 |    0    |    0    |
|          | window_0_1_0_0_0_0_val_read_read_fu_30 |    0    |    0    |
|          | window_0_0_0_0_0_0_val_read_read_fu_36 |    0    |    0    |
|----------|----------------------------------------|---------|---------|
|   write  |         write_ln25_write_fu_42         |    0    |    0    |
|          |         write_ln32_write_fu_49         |    0    |    0    |
|----------|----------------------------------------|---------|---------|
|   Total  |                                        |    0    |   146   |
|----------|----------------------------------------|---------|---------|

Memories:
N/A

* Register list:
+------------+--------+
|            |   FF   |
+------------+--------+
|max1_reg_158|    8   |
|max2_reg_164|    8   |
|min1_reg_170|    8   |
|min2_reg_176|    8   |
+------------+--------+
|    Total   |   32   |
+------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   146  |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |   32   |    -   |
+-----------+--------+--------+
|   Total   |   32   |   146  |
+-----------+--------+--------+
