

================================================================
== Vitis HLS Report for 'pooling_2x2'
================================================================
* Date:           Wed May 14 11:16:38 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        pynq_pooling
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  3.163 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |        1|        1|  8.000 ns|  8.000 ns|    2|    2|  dataflow|
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        +---------------------------------------+------------------------------------+---------+---------+----------+----------+-----+-----+---------+
        |                                       |                                    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
        |                Instance               |               Module               |   min   |   max   |    min   |    max   | min | max |   Type  |
        +---------------------------------------+------------------------------------+---------+---------+----------+----------+-----+-----+---------+
        |pooling_2x2_Block_entry_split_proc_U0  |pooling_2x2_Block_entry_split_proc  |        1|        1|  8.000 ns|  8.000 ns|    1|    1|       no|
        +---------------------------------------+------------------------------------+---------+---------+----------+----------+-----+-----+---------+

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       -|      -|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        -|    -|      51|    189|    -|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       -|      -|    -|
|Register         |        -|    -|       -|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        0|    0|      51|    189|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      280|  220|  106400|  53200|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        0|    0|      ~0|     ~0|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    +---------------------------------------+------------------------------------+---------+----+----+-----+-----+
    |                Instance               |               Module               | BRAM_18K| DSP| FF | LUT | URAM|
    +---------------------------------------+------------------------------------+---------+----+----+-----+-----+
    |pooling_2x2_Block_entry_split_proc_U0  |pooling_2x2_Block_entry_split_proc  |        0|   0|  51|  189|    0|
    +---------------------------------------+------------------------------------+---------+----+----+-----+-----+
    |Total                                  |                                    |        0|   0|  51|  189|    0|
    +---------------------------------------+------------------------------------+---------+----+----+-----+-----+

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+-------------------------------+-----+-----+------------+------------------------+--------------+
|           RTL Ports           | Dir | Bits|  Protocol  |      Source Object     |    C Type    |
+-------------------------------+-----+-----+------------+------------------------+--------------+
|window_0_0_0_0_0_0_val         |   in|    8|     ap_none|  window_0_0_0_0_0_0_val|        scalar|
|window_0_0_0_0_0_0_val_ap_vld  |   in|    1|     ap_none|  window_0_0_0_0_0_0_val|        scalar|
|window_0_1_0_0_0_0_val         |   in|    8|     ap_none|  window_0_1_0_0_0_0_val|        scalar|
|window_0_1_0_0_0_0_val_ap_vld  |   in|    1|     ap_none|  window_0_1_0_0_0_0_val|        scalar|
|window_1_0_0_0_0_0_val         |   in|    8|     ap_none|  window_1_0_0_0_0_0_val|        scalar|
|window_1_0_0_0_0_0_val_ap_vld  |   in|    1|     ap_none|  window_1_0_0_0_0_0_val|        scalar|
|window_1_1_0_0_0_0_val         |   in|    8|     ap_none|  window_1_1_0_0_0_0_val|        scalar|
|window_1_1_0_0_0_0_val_ap_vld  |   in|    1|     ap_none|  window_1_1_0_0_0_0_val|        scalar|
|min_val                        |  out|    8|      ap_vld|                 min_val|       pointer|
|min_val_ap_vld                 |  out|    1|      ap_vld|                 min_val|       pointer|
|max_val                        |  out|    8|      ap_vld|                 max_val|       pointer|
|max_val_ap_vld                 |  out|    1|      ap_vld|                 max_val|       pointer|
|ap_clk                         |   in|    1|  ap_ctrl_hs|             pooling_2x2|  return value|
|ap_rst                         |   in|    1|  ap_ctrl_hs|             pooling_2x2|  return value|
|ap_start                       |   in|    1|  ap_ctrl_hs|             pooling_2x2|  return value|
|ap_done                        |  out|    1|  ap_ctrl_hs|             pooling_2x2|  return value|
|ap_ready                       |  out|    1|  ap_ctrl_hs|             pooling_2x2|  return value|
|ap_idle                        |  out|    1|  ap_ctrl_hs|             pooling_2x2|  return value|
|ap_continue                    |   in|    1|  ap_ctrl_hs|             pooling_2x2|  return value|
+-------------------------------+-----+-----+------------+------------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 2, States = { 1 2 }

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.16>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%window_1_1_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_1_1_0_0_0_0_val"   --->   Operation 3 'read' 'window_1_1_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%window_1_0_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_1_0_0_0_0_0_val"   --->   Operation 4 'read' 'window_1_0_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%window_0_1_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_0_1_0_0_0_0_val"   --->   Operation 5 'read' 'window_0_1_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%window_0_0_0_0_0_0_val_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %window_0_0_0_0_0_0_val"   --->   Operation 6 'read' 'window_0_0_0_0_0_0_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [2/2] (3.16ns)   --->   "%call_ln0 = call void @pooling_2x2_Block_entry.split_proc, i8 %window_0_0_0_0_0_0_val_read, i8 %window_0_1_0_0_0_0_val_read, i8 %window_1_0_0_0_0_0_val_read, i8 %window_1_1_0_0_0_0_val_read, i8 %max_val, i8 %min_val"   --->   Operation 7 'call' 'call_ln0' <Predicate = true> <Delay = 3.16> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 3.16>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%specdataflowpipeline_ln23 = specdataflowpipeline void @_ssdm_op_SpecDataflowPipeline, i32 4294967295, i32 0, void @empty_0" [pynq_pooling/source/pooling.cpp:23->pynq_pooling/source/pooling.cpp:40]   --->   Operation 8 'specdataflowpipeline' 'specdataflowpipeline_ln23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/2] (3.16ns)   --->   "%call_ln0 = call void @pooling_2x2_Block_entry.split_proc, i8 %window_0_0_0_0_0_0_val_read, i8 %window_0_1_0_0_0_0_val_read, i8 %window_1_0_0_0_0_0_val_read, i8 %window_1_1_0_0_0_0_val_read, i8 %max_val, i8 %min_val"   --->   Operation 9 'call' 'call_ln0' <Predicate = true> <Delay = 3.16> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%ret_ln42 = ret" [pynq_pooling/source/pooling.cpp:42]   --->   Operation 10 'ret' 'ret_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ window_0_0_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ window_0_1_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ window_1_0_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ window_1_1_0_0_0_0_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ min_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
Port [ max_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
window_1_1_0_0_0_0_val_read (read                ) [ 001]
window_1_0_0_0_0_0_val_read (read                ) [ 001]
window_0_1_0_0_0_0_val_read (read                ) [ 001]
window_0_0_0_0_0_0_val_read (read                ) [ 001]
specdataflowpipeline_ln23   (specdataflowpipeline) [ 000]
call_ln0                    (call                ) [ 000]
ret_ln42                    (ret                 ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="window_0_0_0_0_0_0_val">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_0_0_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="window_0_1_0_0_0_0_val">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_0_1_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="window_1_0_0_0_0_0_val">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_1_0_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="window_1_1_0_0_0_0_val">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="window_1_1_0_0_0_0_val"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="min_val">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="min_val"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="max_val">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="max_val"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i8"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="pooling_2x2_Block_entry.split_proc"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecDataflowPipeline"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="24" class="1004" name="window_1_1_0_0_0_0_val_read_read_fu_24">
<pin_list>
<pin id="25" dir="0" index="0" bw="8" slack="0"/>
<pin id="26" dir="0" index="1" bw="8" slack="0"/>
<pin id="27" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_1_1_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="30" class="1004" name="window_1_0_0_0_0_0_val_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="8" slack="0"/>
<pin id="32" dir="0" index="1" bw="8" slack="0"/>
<pin id="33" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_1_0_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="window_0_1_0_0_0_0_val_read_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="8" slack="0"/>
<pin id="38" dir="0" index="1" bw="8" slack="0"/>
<pin id="39" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_0_1_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="42" class="1004" name="window_0_0_0_0_0_0_val_read_read_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="8" slack="0"/>
<pin id="44" dir="0" index="1" bw="8" slack="0"/>
<pin id="45" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="window_0_0_0_0_0_0_val_read/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="grp_pooling_2x2_Block_entry_split_proc_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="0" slack="0"/>
<pin id="50" dir="0" index="1" bw="8" slack="0"/>
<pin id="51" dir="0" index="2" bw="8" slack="0"/>
<pin id="52" dir="0" index="3" bw="8" slack="0"/>
<pin id="53" dir="0" index="4" bw="8" slack="0"/>
<pin id="54" dir="0" index="5" bw="8" slack="0"/>
<pin id="55" dir="0" index="6" bw="8" slack="0"/>
<pin id="56" dir="1" index="7" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ln0/1 "/>
</bind>
</comp>

<comp id="64" class="1005" name="window_1_1_0_0_0_0_val_read_reg_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="8" slack="1"/>
<pin id="66" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="window_1_1_0_0_0_0_val_read "/>
</bind>
</comp>

<comp id="69" class="1005" name="window_1_0_0_0_0_0_val_read_reg_69">
<pin_list>
<pin id="70" dir="0" index="0" bw="8" slack="1"/>
<pin id="71" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="window_1_0_0_0_0_0_val_read "/>
</bind>
</comp>

<comp id="74" class="1005" name="window_0_1_0_0_0_0_val_read_reg_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="8" slack="1"/>
<pin id="76" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="window_0_1_0_0_0_0_val_read "/>
</bind>
</comp>

<comp id="79" class="1005" name="window_0_0_0_0_0_0_val_read_reg_79">
<pin_list>
<pin id="80" dir="0" index="0" bw="8" slack="1"/>
<pin id="81" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="window_0_0_0_0_0_0_val_read "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="28"><net_src comp="12" pin="0"/><net_sink comp="24" pin=0"/></net>

<net id="29"><net_src comp="6" pin="0"/><net_sink comp="24" pin=1"/></net>

<net id="34"><net_src comp="12" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="4" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="40"><net_src comp="12" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="2" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="12" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="47"><net_src comp="0" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="57"><net_src comp="14" pin="0"/><net_sink comp="48" pin=0"/></net>

<net id="58"><net_src comp="42" pin="2"/><net_sink comp="48" pin=1"/></net>

<net id="59"><net_src comp="36" pin="2"/><net_sink comp="48" pin=2"/></net>

<net id="60"><net_src comp="30" pin="2"/><net_sink comp="48" pin=3"/></net>

<net id="61"><net_src comp="24" pin="2"/><net_sink comp="48" pin=4"/></net>

<net id="62"><net_src comp="10" pin="0"/><net_sink comp="48" pin=5"/></net>

<net id="63"><net_src comp="8" pin="0"/><net_sink comp="48" pin=6"/></net>

<net id="67"><net_src comp="24" pin="2"/><net_sink comp="64" pin=0"/></net>

<net id="68"><net_src comp="64" pin="1"/><net_sink comp="48" pin=4"/></net>

<net id="72"><net_src comp="30" pin="2"/><net_sink comp="69" pin=0"/></net>

<net id="73"><net_src comp="69" pin="1"/><net_sink comp="48" pin=3"/></net>

<net id="77"><net_src comp="36" pin="2"/><net_sink comp="74" pin=0"/></net>

<net id="78"><net_src comp="74" pin="1"/><net_sink comp="48" pin=2"/></net>

<net id="82"><net_src comp="42" pin="2"/><net_sink comp="79" pin=0"/></net>

<net id="83"><net_src comp="79" pin="1"/><net_sink comp="48" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: min_val | {1 2 }
	Port: max_val | {1 2 }
 - Input state : 
	Port: pooling_2x2 : window_0_0_0_0_0_0_val | {1 }
	Port: pooling_2x2 : window_0_1_0_0_0_0_val | {1 }
	Port: pooling_2x2 : window_1_0_0_0_0_0_val | {1 }
	Port: pooling_2x2 : window_1_1_0_0_0_0_val | {1 }
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------------------------|---------|---------|
| Operation|                Functional Unit               |    FF   |   LUT   |
|----------|----------------------------------------------|---------|---------|
|   call   | grp_pooling_2x2_Block_entry_split_proc_fu_48 |    32   |   146   |
|----------|----------------------------------------------|---------|---------|
|          |    window_1_1_0_0_0_0_val_read_read_fu_24    |    0    |    0    |
|   read   |    window_1_0_0_0_0_0_val_read_read_fu_30    |    0    |    0    |
|          |    window_0_1_0_0_0_0_val_read_read_fu_36    |    0    |    0    |
|          |    window_0_0_0_0_0_0_val_read_read_fu_42    |    0    |    0    |
|----------|----------------------------------------------|---------|---------|
|   Total  |                                              |    32   |   146   |
|----------|----------------------------------------------|---------|---------|

Memories:
N/A

* Register list:
+----------------------------------+--------+
|                                  |   FF   |
+----------------------------------+--------+
|window_0_0_0_0_0_0_val_read_reg_79|    8   |
|window_0_1_0_0_0_0_val_read_reg_74|    8   |
|window_1_0_0_0_0_0_val_read_reg_69|    8   |
|window_1_1_0_0_0_0_val_read_reg_64|    8   |
+----------------------------------+--------+
|               Total              |   32   |
+----------------------------------+--------+

* Multiplexer (MUX) list: 
|----------------------------------------------|------|------|------|--------||---------||---------||---------|
|                     Comp                     |  Pin | Size |  BW  | S x BW ||  Delay  ||    FF   ||   LUT   |
|----------------------------------------------|------|------|------|--------||---------||---------||---------|
| grp_pooling_2x2_Block_entry_split_proc_fu_48 |  p1  |   2  |   8  |   16   ||    0    ||    9    |
| grp_pooling_2x2_Block_entry_split_proc_fu_48 |  p2  |   2  |   8  |   16   ||    0    ||    9    |
| grp_pooling_2x2_Block_entry_split_proc_fu_48 |  p3  |   2  |   8  |   16   ||    0    ||    9    |
| grp_pooling_2x2_Block_entry_split_proc_fu_48 |  p4  |   2  |   8  |   16   ||    0    ||    9    |
|----------------------------------------------|------|------|------|--------||---------||---------||---------|
|                     Total                    |      |      |      |   64   ||  6.352  ||    0    ||    36   |
|----------------------------------------------|------|------|------|--------||---------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |   32   |   146  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    6   |    0   |   36   |
|  Register |    -   |   32   |    -   |
+-----------+--------+--------+--------+
|   Total   |    6   |   64   |   182  |
+-----------+--------+--------+--------+
