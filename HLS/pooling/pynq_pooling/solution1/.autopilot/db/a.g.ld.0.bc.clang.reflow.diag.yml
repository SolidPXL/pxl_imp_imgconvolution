--- !Passed
Pass:            reflow-pragma-conflict-handle
Name:            FunctionPragmaConflictWarn
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 21, Column: 0 }
Function:        _Z8calc_maxPA2_7ap_uintILi8EERS0_
Args:            
  - String:          'In function '''
  - Function:        'calc_max(ap_uint<8> (*) [2], ap_uint<8>&)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 21, 
                       Column: 0 }
  - String:          ''', '
  - String:          'Pragma conflict happens on '''
  - String:          INLINE
  - String:          ''' and '
  - String:          DATAFLOW
  - String:          ' pragmas: '
  - String:          Inline into dataflow region may break the canonical form
...
--- !Passed
Pass:            reflow-pragma-conflict-handle
Name:            FunctionPragmaConflictWarn
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 28, Column: 0 }
Function:        _Z8calc_minPA2_7ap_uintILi8EERS0_
Args:            
  - String:          'In function '''
  - Function:        'calc_min(ap_uint<8> (*) [2], ap_uint<8>&)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 28, 
                       Column: 0 }
  - String:          ''', '
  - String:          'Pragma conflict happens on '''
  - String:          INLINE
  - String:          ''' and '
  - String:          DATAFLOW
  - String:          ' pragmas: '
  - String:          Inline into dataflow region may break the canonical form
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 40, Column: 2 }
Function:        _Z11pooling_2x2PA2_7ap_uintILi8EERS0_S3_
Args:            
  - String:          'Inlining function '''
  - Callee:          'calc_max(ap_uint<8> (*) [2], ap_uint<8>&)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 21, 
                       Column: 0 }
  - String:          ''' into '''
  - Caller:          'pooling_2x2(ap_uint<8> (*) [2], ap_uint<8>&, ap_uint<8>&)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 35, 
                       Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 41, Column: 5 }
Function:        _Z11pooling_2x2PA2_7ap_uintILi8EERS0_S3_
Args:            
  - String:          'Inlining function '''
  - Callee:          'calc_min(ap_uint<8> (*) [2], ap_uint<8>&)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 28, 
                       Column: 0 }
  - String:          ''' into '''
  - Caller:          'pooling_2x2(ap_uint<8> (*) [2], ap_uint<8>&, ap_uint<8>&)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 35, 
                       Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 74, Column: 13 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Inlining function '''
  - Callee:          'shift_linebuf(ap_uint<8> (*) [256], int, ap_uint<8>)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 7, 
                       Column: 0 }
  - String:          ''' into '''
  - Caller:          'image_pooling(ap_uint<8>*, ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 49, 
                       Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 78, Column: 17 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Inlining function '''
  - Callee:          'fill_window(ap_uint<8> (*) [2], ap_uint<8> (*) [256], int)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 13, 
                       Column: 0 }
  - String:          ''' into '''
  - Caller:          'image_pooling(ap_uint<8>*, ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 49, 
                       Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-array-partition
Name:            ArrayXform
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 58, Column: 10 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Applying '
  - String:          array_partition
  - String:          ' to '''
  - UOName:          linebuf
  - String:          ''':'
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '1'
  - String:          .
...
--- !Passed
Pass:            reflow-array-partition
Name:            ArrayXform
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 61, Column: 10 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Applying '
  - String:          array_partition
  - String:          ' to '''
  - UOName:          window
  - String:          ''':'
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '1'
  - String:          .
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '2'
  - String:          .
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 68, Column: 5 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '65536'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        src4seq
  - ArrayName:       src
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        LOOP_ROW
  - String:          ' '
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:68:5'
  - String:          ' '
  - Function:        'image_pooling(ap_uint<8>*, ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 49, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 10, 
                       Column: 21 }
  - OrigDirection:   read
  - OrigID:          for.body4.load.14
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessInCondBranch
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 84, Column: 23 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Access '
  - Access:          store
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 84, 
                       Column: 23 }
  - String:          ' is in the conditional branch'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 84, 
                       Column: 23 }
  - OrigDirection:   write
  - OrigID:          if.then14.store.6
  - ArrayName:       dst_min
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        LOOP_COL
  - String:          ' '
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:70:9'
  - String:          ' '
  - Function:        'image_pooling(ap_uint<8>*, ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 49, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessInCondBranch
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 85, Column: 23 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Access '
  - Access:          store
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 85, 
                       Column: 23 }
  - String:          ' is in the conditional branch'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 85, 
                       Column: 23 }
  - OrigDirection:   write
  - OrigID:          if.then14.store.9
  - ArrayName:       dst_max
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        LOOP_COL
  - String:          ' '
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:70:9'
  - String:          ' '
  - Function:        'image_pooling(ap_uint<8>*, ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 49, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 68, Column: 5 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 68, 
                       Column: 5 }
  - OrigDirection:   read
  - OrigID:          src4seq
  - ArrayName:       src
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        LOOP_COL
  - String:          ' '
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:70:9'
  - String:          ' '
  - Function:        'image_pooling(ap_uint<8>*, ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 49, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-occurrence-inference
Name:            OccurrenceInference
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 70, Column: 9 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Occurrence cycles within '''
  - LoopName:        LOOP_COL
  - String:          '''('
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:70:9'
  - String:          ') has been inferred.'
...
--- !Passed
Pass:            reflow-occurrence-inference
Name:            OccurrenceInference
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 68, Column: 5 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Occurrence cycles within '''
  - LoopName:        LOOP_ROW
  - String:          '''('
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:68:5'
  - String:          ') has been inferred.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 68, Column: 5 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '65536'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        LOOP_ROW
  - String:          ' '
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:68:5'
  - String:          ' '
  - Function:        'image_pooling(ap_uint<8>*, ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 49, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: pynq_pooling/source/pooling.cpp, Line: 68, Column: 5 }
Function:        _Z13image_poolingP7ap_uintILi8EES1_S1_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '65536'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' in loop '''
  - LoopName:        LOOP_ROW
  - String:          '''('
  - LoopLoc:         'pynq_pooling/source/pooling.cpp:68:5'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
