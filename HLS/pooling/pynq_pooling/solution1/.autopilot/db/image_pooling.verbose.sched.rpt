

================================================================
== Vitis HLS Report for 'image_pooling'
================================================================
* Date:           Wed May 14 11:16:38 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        pynq_pooling
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  5.840 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+-----------+--------+---------+---------+
    |  Latency (cycles) |  Latency (absolute)  |     Interval     | Pipeline|
    |   min   |   max   |    min   |    max    |   min  |   max   |   Type  |
    +---------+---------+----------+-----------+--------+---------+---------+
    |   327680|  1507328|  2.621 ms|  12.059 ms|  327681|  1507329|       no|
    +---------+---------+----------+-----------+--------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- LOOP_ROW_LOOP_COL  |   327679|  1507327|    5 ~ 23|          -|          -|  65536|        no|
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 23
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 9 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 23 
12 --> 13 
13 --> 14 
14 --> 15 23 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten3 = alloca i32 1"   --->   Operation 24 'alloca' 'indvar_flatten3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%row4 = alloca i32 1"   --->   Operation 25 'alloca' 'row4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%col5 = alloca i32 1"   --->   Operation 26 'alloca' 'col5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%add_ln689 = alloca i32 1"   --->   Operation 27 'alloca' 'add_ln689' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%dst_row_16 = alloca i32 1"   --->   Operation 28 'alloca' 'dst_row_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%dst_col_17 = alloca i32 1"   --->   Operation 29 'alloca' 'dst_col_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%spectopmodule_ln47 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_12" [pynq_pooling/source/pooling.cpp:47]   --->   Operation 30 'spectopmodule' 'spectopmodule_ln47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %gmem, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %gmem"   --->   Operation 32 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %src, void @empty_4, i32 4294967295, i32 4294967295, void @empty_5, i32 0, i32 0, void @empty_6, void @empty_7, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0, i32 0"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %src, void @empty_9, i32 4294967295, i32 4294967295, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0, i32 0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dst_min, void @empty_4, i32 4294967295, i32 4294967295, void @empty_5, i32 0, i32 0, void @empty_6, void @empty_10, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dst_min, void @empty_9, i32 4294967295, i32 4294967295, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0, i32 0"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dst_max, void @empty_4, i32 4294967295, i32 4294967295, void @empty_5, i32 0, i32 0, void @empty_6, void @empty_11, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0, i32 0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dst_max, void @empty_9, i32 4294967295, i32 4294967295, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0, i32 0"   --->   Operation 38 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_6, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.00ns)   --->   "%dst_max_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %dst_max"   --->   Operation 40 'read' 'dst_max_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 112 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 41 [1/1] (1.00ns)   --->   "%dst_min_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %dst_min"   --->   Operation 41 'read' 'dst_min_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 112 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 42 [1/1] (1.00ns)   --->   "%src_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %src"   --->   Operation 42 'read' 'src_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 112 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%linebuf = alloca i64 1" [pynq_pooling/source/pooling.cpp:58]   --->   Operation 43 'alloca' 'linebuf' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%linebuf_1 = alloca i64 1" [pynq_pooling/source/pooling.cpp:58]   --->   Operation 44 'alloca' 'linebuf_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%min_val = alloca i64 1" [pynq_pooling/source/pooling.cpp:80]   --->   Operation 45 'alloca' 'min_val' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%max_val = alloca i64 1" [pynq_pooling/source/pooling.cpp:80]   --->   Operation 46 'alloca' 'max_val' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %dst_col_17"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %dst_row_16"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln0 = store i9 1, i9 %add_ln689"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 50 [1/1] (1.58ns)   --->   "%store_ln0 = store i9 0, i9 %col5"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 51 [1/1] (1.58ns)   --->   "%store_ln0 = store i9 0, i9 %row4"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 52 [1/1] (1.58ns)   --->   "%store_ln0 = store i16 0, i16 %indvar_flatten3"   --->   Operation 52 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 53 [1/1] (1.58ns)   --->   "%br_ln0 = br void %new.header"   --->   Operation 53 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 5.84>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%first_iter_0 = phi i1 1, void %entry, i1 0, void %for.inc"   --->   Operation 54 'phi' 'first_iter_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%icmp_ln708 = phi i1 0, void %entry, i1 %icmp_ln70, void %for.inc" [pynq_pooling/source/pooling.cpp:70]   --->   Operation 55 'phi' 'icmp_ln708' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%dst_row_16_load = load i32 %dst_row_16" [pynq_pooling/source/pooling.cpp:83]   --->   Operation 56 'load' 'dst_row_16_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%dst_col_17_load = load i32 %dst_col_17" [pynq_pooling/source/pooling.cpp:83]   --->   Operation 57 'load' 'dst_col_17_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i8 %gmem, i64 %src_read" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 58 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln77 = br i1 %first_iter_0, void %for.inc27, void %for.first.iter.for.inc27" [pynq_pooling/source/pooling.cpp:77]   --->   Operation 59 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [8/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 60 'readreq' 'empty' <Predicate = (first_iter_0)> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 5.84>
ST_3 : Operation 61 [7/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 61 'readreq' 'empty' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 5.84>
ST_4 : Operation 62 [6/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 62 'readreq' 'empty' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 5.84>
ST_5 : Operation 63 [5/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 63 'readreq' 'empty' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 5.84>
ST_6 : Operation 64 [4/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 64 'readreq' 'empty' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 5.84>
ST_7 : Operation 65 [3/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 65 'readreq' 'empty' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 5.84>
ST_8 : Operation 66 [2/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 66 'readreq' 'empty' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 5.84>
ST_9 : Operation 67 [1/8] (5.84ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i64 65536" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 67 'readreq' 'empty' <Predicate = (first_iter_0)> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln77 = br void %for.inc27" [pynq_pooling/source/pooling.cpp:77]   --->   Operation 68 'br' 'br_ln77' <Predicate = (first_iter_0)> <Delay = 0.00>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%col5_load = load i9 %col5" [pynq_pooling/source/pooling.cpp:65]   --->   Operation 69 'load' 'col5_load' <Predicate = (!icmp_ln708)> <Delay = 0.00>
ST_9 : Operation 70 [1/1] (0.96ns)   --->   "%select_ln65 = select i1 %icmp_ln708, i9 0, i9 %col5_load" [pynq_pooling/source/pooling.cpp:65]   --->   Operation 70 'select' 'select_ln65' <Predicate = true> <Delay = 0.96> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i9 %select_ln65" [pynq_pooling/source/pooling.cpp:70]   --->   Operation 71 'zext' 'zext_ln70' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln70 = trunc i9 %select_ln65" [pynq_pooling/source/pooling.cpp:70]   --->   Operation 72 'trunc' 'trunc_ln70' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%linebuf_1_addr = getelementptr i8 %linebuf_1, i64 0, i64 %zext_ln70" [pynq_pooling/source/pooling.cpp:9->pynq_pooling/source/pooling.cpp:74]   --->   Operation 73 'getelementptr' 'linebuf_1_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [2/2] (3.25ns)   --->   "%linebuf_1_load = load i8 %linebuf_1_addr" [pynq_pooling/source/pooling.cpp:9->pynq_pooling/source/pooling.cpp:74]   --->   Operation 74 'load' 'linebuf_1_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_9 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln77 = trunc i9 %select_ln65" [pynq_pooling/source/pooling.cpp:77]   --->   Operation 75 'trunc' 'trunc_ln77' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 5.84>
ST_10 : Operation 76 [1/1] (5.84ns)   --->   "%gmem_addr_read = read i8 @_ssdm_op_Read.m_axi.p1i8, i8 %gmem_addr" [pynq_pooling/source/pooling.cpp:10->pynq_pooling/source/pooling.cpp:74]   --->   Operation 76 'read' 'gmem_addr_read' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 77 [1/2] (3.25ns)   --->   "%linebuf_1_load = load i8 %linebuf_1_addr" [pynq_pooling/source/pooling.cpp:9->pynq_pooling/source/pooling.cpp:74]   --->   Operation 77 'load' 'linebuf_1_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>

State 11 <SV = 10> <Delay = 5.16>
ST_11 : Operation 78 [1/1] (0.00ns)   --->   "%indvar_flatten3_load = load i16 %indvar_flatten3" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 78 'load' 'indvar_flatten3_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 79 [1/1] (0.00ns)   --->   "%row4_load = load i9 %row4" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 79 'load' 'row4_load' <Predicate = (!icmp_ln708)> <Delay = 0.00>
ST_11 : Operation 80 [1/1] (0.00ns)   --->   "%add_ln689_load = load i9 %add_ln689" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 80 'load' 'add_ln689_load' <Predicate = (icmp_ln708)> <Delay = 0.00>
ST_11 : Operation 81 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @LOOP_ROW_LOOP_COL_str"   --->   Operation 81 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 82 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 65536, i64 65536, i64 65536"   --->   Operation 82 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 83 [1/1] (0.96ns)   --->   "%row = select i1 %icmp_ln708, i9 %add_ln689_load, i9 %row4_load" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 83 'select' 'row' <Predicate = true> <Delay = 0.96> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 84 [1/1] (0.00ns)   --->   "%empty_18 = trunc i9 %row" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 84 'trunc' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 85 [1/1] (0.00ns)   --->   "%linebuf_addr = getelementptr i8 %linebuf, i64 0, i64 %zext_ln70" [pynq_pooling/source/pooling.cpp:9->pynq_pooling/source/pooling.cpp:74]   --->   Operation 85 'getelementptr' 'linebuf_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 86 [1/1] (3.25ns)   --->   "%store_ln9 = store i8 %linebuf_1_load, i8 %linebuf_addr" [pynq_pooling/source/pooling.cpp:9->pynq_pooling/source/pooling.cpp:74]   --->   Operation 86 'store' 'store_ln9' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_11 : Operation 87 [1/1] (3.25ns)   --->   "%store_ln10 = store i8 %gmem_addr_read, i8 %linebuf_1_addr" [pynq_pooling/source/pooling.cpp:10->pynq_pooling/source/pooling.cpp:74]   --->   Operation 87 'store' 'store_ln10' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_11 : Operation 88 [1/1] (0.97ns)   --->   "%and_ln77 = and i1 %empty_18, i1 %trunc_ln77" [pynq_pooling/source/pooling.cpp:77]   --->   Operation 88 'and' 'and_ln77' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 89 [1/1] (2.07ns)   --->   "%add_ln68_1 = add i16 %indvar_flatten3_load, i16 1" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 89 'add' 'add_ln68_1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 90 [1/1] (0.00ns)   --->   "%br_ln77 = br i1 %and_ln77, void %for.inc, void %xlx_occurrence.if.then.0" [pynq_pooling/source/pooling.cpp:77]   --->   Operation 90 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 91 [1/1] (1.91ns)   --->   "%add_ln15 = add i8 %trunc_ln70, i8 255" [pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78]   --->   Operation 91 'add' 'add_ln15' <Predicate = (and_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i8 %add_ln15" [pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78]   --->   Operation 92 'zext' 'zext_ln15' <Predicate = (and_ln77)> <Delay = 0.00>
ST_11 : Operation 93 [1/1] (0.00ns)   --->   "%linebuf_addr_1 = getelementptr i8 %linebuf, i64 0, i64 %zext_ln15" [pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78]   --->   Operation 93 'getelementptr' 'linebuf_addr_1' <Predicate = (and_ln77)> <Delay = 0.00>
ST_11 : Operation 94 [2/2] (3.25ns)   --->   "%linebuf_load = load i8 %linebuf_addr_1" [pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78]   --->   Operation 94 'load' 'linebuf_load' <Predicate = (and_ln77)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_11 : Operation 95 [1/1] (0.00ns)   --->   "%linebuf_1_addr_1 = getelementptr i8 %linebuf_1, i64 0, i64 %zext_ln15" [pynq_pooling/source/pooling.cpp:17->pynq_pooling/source/pooling.cpp:78]   --->   Operation 95 'getelementptr' 'linebuf_1_addr_1' <Predicate = (and_ln77)> <Delay = 0.00>
ST_11 : Operation 96 [2/2] (3.25ns)   --->   "%linebuf_1_load_1 = load i8 %linebuf_1_addr_1" [pynq_pooling/source/pooling.cpp:17->pynq_pooling/source/pooling.cpp:78]   --->   Operation 96 'load' 'linebuf_1_load_1' <Predicate = (and_ln77)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 97 [1/2] (3.25ns)   --->   "%linebuf_load = load i8 %linebuf_addr_1" [pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78]   --->   Operation 97 'load' 'linebuf_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_12 : Operation 98 [1/2] (3.25ns)   --->   "%linebuf_1_load_1 = load i8 %linebuf_1_addr_1" [pynq_pooling/source/pooling.cpp:17->pynq_pooling/source/pooling.cpp:78]   --->   Operation 98 'load' 'linebuf_1_load_1' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>

State 13 <SV = 12> <Delay = 3.16>
ST_13 : Operation 99 [2/2] (3.16ns)   --->   "%call_ln81 = call void @pooling_2x2, i8 %linebuf_load, i8 %linebuf_1_load, i8 %linebuf_1_load_1, i8 %gmem_addr_read, i8 %min_val, i8 %max_val" [pynq_pooling/source/pooling.cpp:81]   --->   Operation 99 'call' 'call_ln81' <Predicate = true> <Delay = 3.16> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 3.32>
ST_14 : Operation 100 [1/1] (0.00ns)   --->   "%rbegin = specregionbegin i32 @_ssdm_op_SpecRegionBegin, void @empty" [pynq_pooling/source/pooling.cpp:13->pynq_pooling/source/pooling.cpp:78]   --->   Operation 100 'specregionbegin' 'rbegin' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 101 [1/2] (0.00ns)   --->   "%call_ln81 = call void @pooling_2x2, i8 %linebuf_load, i8 %linebuf_1_load, i8 %linebuf_1_load_1, i8 %gmem_addr_read, i8 %min_val, i8 %max_val" [pynq_pooling/source/pooling.cpp:81]   --->   Operation 101 'call' 'call_ln81' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 102 [1/1] (0.00ns)   --->   "%tmp = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %dst_row_16_load, i32 7, i32 31" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 102 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 103 [1/1] (2.34ns)   --->   "%icmp_ln82 = icmp_slt  i25 %tmp, i25 1" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 103 'icmp' 'icmp_ln82' <Predicate = true> <Delay = 2.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %dst_col_17_load, i32 7, i32 31" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 104 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 105 [1/1] (2.34ns)   --->   "%icmp_ln82_1 = icmp_slt  i25 %tmp_1, i25 1" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 105 'icmp' 'icmp_ln82_1' <Predicate = true> <Delay = 2.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 106 [1/1] (0.97ns)   --->   "%and_ln82 = and i1 %icmp_ln82, i1 %icmp_ln82_1" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 106 'and' 'and_ln82' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 107 [1/1] (0.00ns)   --->   "%specoccurrence_ln82 = specoccurrence void @_ssdm_op_SpecOccurrence, i64 2, void @empty_0" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 107 'specoccurrence' 'specoccurrence_ln82' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 108 [1/1] (0.00ns)   --->   "%rend = specregionend i32 @_ssdm_op_SpecRegionEnd, void @empty, i32 %rbegin" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 108 'specregionend' 'rend' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 109 [1/1] (0.00ns)   --->   "%br_ln82 = br i1 %and_ln82, void %for.inc, void %if.then14" [pynq_pooling/source/pooling.cpp:82]   --->   Operation 109 'br' 'br_ln82' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node out_idx)   --->   "%shl_ln83 = shl i32 %dst_row_16_load, i32 7" [pynq_pooling/source/pooling.cpp:83]   --->   Operation 110 'shl' 'shl_ln83' <Predicate = (and_ln82)> <Delay = 0.00>
ST_14 : Operation 111 [1/1] (2.55ns) (out node of the LUT)   --->   "%out_idx = add i32 %shl_ln83, i32 %dst_col_17_load" [pynq_pooling/source/pooling.cpp:83]   --->   Operation 111 'add' 'out_idx' <Predicate = (and_ln82)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 112 [1/1] (2.55ns)   --->   "%dst_col_1 = add i32 %dst_col_17_load, i32 1" [pynq_pooling/source/pooling.cpp:87]   --->   Operation 112 'add' 'dst_col_1' <Predicate = (and_ln82)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.83>
ST_15 : Operation 113 [1/1] (0.00ns)   --->   "%sext_ln84 = sext i32 %out_idx" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 113 'sext' 'sext_ln84' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 114 [1/1] (3.52ns)   --->   "%add_ln84 = add i64 %sext_ln84, i64 %dst_min_read" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 114 'add' 'add_ln84' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 115 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i8 %gmem, i64 %add_ln84" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 115 'getelementptr' 'gmem_addr_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 116 [1/1] (3.52ns)   --->   "%add_ln85 = add i64 %sext_ln84, i64 %dst_max_read" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 116 'add' 'add_ln85' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 117 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i8 %gmem, i64 %add_ln85" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 117 'getelementptr' 'gmem_addr_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 118 [1/1] (2.55ns)   --->   "%icmp_ln88 = icmp_eq  i32 %dst_col_1, i32 128" [pynq_pooling/source/pooling.cpp:88]   --->   Operation 118 'icmp' 'icmp_ln88' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 119 [1/1] (2.55ns)   --->   "%add_ln90 = add i32 %dst_row_16_load, i32 1" [pynq_pooling/source/pooling.cpp:90]   --->   Operation 119 'add' 'add_ln90' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 120 [1/1] (0.69ns)   --->   "%dst_col = select i1 %icmp_ln88, i32 0, i32 %dst_col_1" [pynq_pooling/source/pooling.cpp:88]   --->   Operation 120 'select' 'dst_col' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 121 [1/1] (0.69ns)   --->   "%dst_row = select i1 %icmp_ln88, i32 %add_ln90, i32 %dst_row_16_load" [pynq_pooling/source/pooling.cpp:88]   --->   Operation 121 'select' 'dst_row' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 122 [1/1] (1.58ns)   --->   "%store_ln88 = store i32 %dst_col, i32 %dst_col_17" [pynq_pooling/source/pooling.cpp:88]   --->   Operation 122 'store' 'store_ln88' <Predicate = true> <Delay = 1.58>
ST_15 : Operation 123 [1/1] (1.58ns)   --->   "%store_ln88 = store i32 %dst_row, i32 %dst_row_16" [pynq_pooling/source/pooling.cpp:88]   --->   Operation 123 'store' 'store_ln88' <Predicate = true> <Delay = 1.58>

State 16 <SV = 15> <Delay = 5.84>
ST_16 : Operation 124 [1/1] (5.84ns)   --->   "%gmem_addr_1_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i8P1A, i8 %gmem_addr_1, i64 1" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 124 'writereq' 'gmem_addr_1_req' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 5.84>
ST_17 : Operation 125 [1/1] (0.00ns)   --->   "%min_val_load = load i8 %min_val" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 125 'load' 'min_val_load' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 126 [1/1] (5.84ns)   --->   "%write_ln84 = write void @_ssdm_op_Write.m_axi.i8P1A, i8 %gmem_addr_1, i8 %min_val_load, i1 1" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 126 'write' 'write_ln84' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 127 [1/1] (5.84ns)   --->   "%gmem_addr_2_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i8P1A, i8 %gmem_addr_2, i64 1" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 127 'writereq' 'gmem_addr_2_req' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 5.84>
ST_18 : Operation 128 [5/5] (5.84ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_1" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 128 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 129 [1/1] (0.00ns)   --->   "%max_val_load = load i8 %max_val" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 129 'load' 'max_val_load' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 130 [1/1] (5.84ns)   --->   "%write_ln85 = write void @_ssdm_op_Write.m_axi.i8P1A, i8 %gmem_addr_2, i8 %max_val_load, i1 1" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 130 'write' 'write_ln85' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 5.84>
ST_19 : Operation 131 [4/5] (5.84ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_1" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 131 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 132 [5/5] (5.84ns)   --->   "%gmem_addr_2_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_2" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 132 'writeresp' 'gmem_addr_2_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 5.84>
ST_20 : Operation 133 [3/5] (5.84ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_1" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 133 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 134 [4/5] (5.84ns)   --->   "%gmem_addr_2_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_2" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 134 'writeresp' 'gmem_addr_2_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 5.84>
ST_21 : Operation 135 [2/5] (5.84ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_1" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 135 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 136 [3/5] (5.84ns)   --->   "%gmem_addr_2_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_2" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 136 'writeresp' 'gmem_addr_2_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 5.84>
ST_22 : Operation 137 [1/5] (5.84ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_1" [pynq_pooling/source/pooling.cpp:84]   --->   Operation 137 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 138 [2/5] (5.84ns)   --->   "%gmem_addr_2_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_2" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 138 'writeresp' 'gmem_addr_2_resp' <Predicate = true> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 5.84>
ST_23 : Operation 139 [1/5] (5.84ns)   --->   "%gmem_addr_2_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr_2" [pynq_pooling/source/pooling.cpp:85]   --->   Operation 139 'writeresp' 'gmem_addr_2_resp' <Predicate = (and_ln77 & and_ln82)> <Delay = 5.84> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln92 = br void %for.inc" [pynq_pooling/source/pooling.cpp:92]   --->   Operation 140 'br' 'br_ln92' <Predicate = (and_ln77 & and_ln82)> <Delay = 0.00>
ST_23 : Operation 141 [1/1] (0.00ns)   --->   "%indvar_flatten3_load_1 = load i16 %indvar_flatten3" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 141 'load' 'indvar_flatten3_load_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 142 [1/1] (1.82ns)   --->   "%col = add i9 %select_ln65, i9 1" [pynq_pooling/source/pooling.cpp:70]   --->   Operation 142 'add' 'col' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 143 [1/1] (1.82ns)   --->   "%icmp_ln70 = icmp_eq  i9 %col, i9 256" [pynq_pooling/source/pooling.cpp:70]   --->   Operation 143 'icmp' 'icmp_ln70' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 144 [1/1] (1.82ns)   --->   "%add_ln68 = add i9 %row, i9 1" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 144 'add' 'add_ln68' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 145 [1/1] (2.07ns)   --->   "%icmp_ln68 = icmp_eq  i16 %indvar_flatten3_load_1, i16 65535" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 145 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 2.07> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 146 [1/1] (1.58ns)   --->   "%store_ln68 = store i9 %add_ln68, i9 %add_ln689" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 146 'store' 'store_ln68' <Predicate = true> <Delay = 1.58>
ST_23 : Operation 147 [1/1] (1.58ns)   --->   "%store_ln70 = store i9 %col, i9 %col5" [pynq_pooling/source/pooling.cpp:70]   --->   Operation 147 'store' 'store_ln70' <Predicate = true> <Delay = 1.58>
ST_23 : Operation 148 [1/1] (1.58ns)   --->   "%store_ln68 = store i9 %row, i9 %row4" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 148 'store' 'store_ln68' <Predicate = true> <Delay = 1.58>
ST_23 : Operation 149 [1/1] (1.58ns)   --->   "%store_ln68 = store i16 %add_ln68_1, i16 %indvar_flatten3" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 149 'store' 'store_ln68' <Predicate = true> <Delay = 1.58>
ST_23 : Operation 150 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %icmp_ln68, void %new.header, void %for.end29" [pynq_pooling/source/pooling.cpp:68]   --->   Operation 150 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 151 [1/1] (0.00ns)   --->   "%ret_ln96 = ret" [pynq_pooling/source/pooling.cpp:96]   --->   Operation 151 'ret' 'ret_ln96' <Predicate = (icmp_ln68)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation 32 bit ('dst_col_17') [10]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'dst_col_17' [28]  (1.588 ns)

 <State 2>: 5.840ns
The critical path consists of the following:
	'phi' operation 1 bit ('first_iter_0') [36]  (0.000 ns)
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 3>: 5.840ns
The critical path consists of the following:
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 4>: 5.840ns
The critical path consists of the following:
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 5>: 5.840ns
The critical path consists of the following:
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 6>: 5.840ns
The critical path consists of the following:
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 7>: 5.840ns
The critical path consists of the following:
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 8>: 5.840ns
The critical path consists of the following:
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 9>: 5.840ns
The critical path consists of the following:
	bus request operation ('empty', pynq_pooling/source/pooling.cpp:68) on port 'gmem' (pynq_pooling/source/pooling.cpp:68) [43]  (5.840 ns)

 <State 10>: 5.840ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', pynq_pooling/source/pooling.cpp:10->pynq_pooling/source/pooling.cpp:74) on port 'gmem' (pynq_pooling/source/pooling.cpp:10->pynq_pooling/source/pooling.cpp:74) [57]  (5.840 ns)

 <State 11>: 5.169ns
The critical path consists of the following:
	'add' operation 8 bit ('add_ln15', pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78) [69]  (1.915 ns)
	'getelementptr' operation 8 bit ('linebuf_addr_1', pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78) [71]  (0.000 ns)
	'load' operation 8 bit ('linebuf_load', pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78) on array 'linebuf', pynq_pooling/source/pooling.cpp:58 [72]  (3.254 ns)

 <State 12>: 3.254ns
The critical path consists of the following:
	'load' operation 8 bit ('linebuf_load', pynq_pooling/source/pooling.cpp:15->pynq_pooling/source/pooling.cpp:78) on array 'linebuf', pynq_pooling/source/pooling.cpp:58 [72]  (3.254 ns)

 <State 13>: 3.163ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln81', pynq_pooling/source/pooling.cpp:81) to 'pooling_2x2' [75]  (3.163 ns)

 <State 14>: 3.322ns
The critical path consists of the following:
	'icmp' operation 1 bit ('icmp_ln82', pynq_pooling/source/pooling.cpp:82) [77]  (2.344 ns)
	'and' operation 1 bit ('and_ln82', pynq_pooling/source/pooling.cpp:82) [80]  (0.978 ns)

 <State 15>: 4.838ns
The critical path consists of the following:
	'icmp' operation 1 bit ('icmp_ln88', pynq_pooling/source/pooling.cpp:88) [101]  (2.552 ns)
	'select' operation 32 bit ('dst_col', pynq_pooling/source/pooling.cpp:88) [103]  (0.698 ns)
	'store' operation 0 bit ('store_ln88', pynq_pooling/source/pooling.cpp:88) of variable 'dst_col', pynq_pooling/source/pooling.cpp:88 on local variable 'dst_col_17' [105]  (1.588 ns)

 <State 16>: 5.840ns
The critical path consists of the following:
	bus request operation ('gmem_addr_1_req', pynq_pooling/source/pooling.cpp:84) on port 'gmem' (pynq_pooling/source/pooling.cpp:84) [91]  (5.840 ns)

 <State 17>: 5.840ns
The critical path consists of the following:
	'load' operation 8 bit ('min_val_load', pynq_pooling/source/pooling.cpp:84) on local variable 'min_val', pynq_pooling/source/pooling.cpp:80 [89]  (0.000 ns)
	bus write operation ('write_ln84', pynq_pooling/source/pooling.cpp:84) on port 'gmem' (pynq_pooling/source/pooling.cpp:84) [92]  (5.840 ns)

 <State 18>: 5.840ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', pynq_pooling/source/pooling.cpp:84) on port 'gmem' (pynq_pooling/source/pooling.cpp:84) [93]  (5.840 ns)

 <State 19>: 5.840ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', pynq_pooling/source/pooling.cpp:84) on port 'gmem' (pynq_pooling/source/pooling.cpp:84) [93]  (5.840 ns)

 <State 20>: 5.840ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', pynq_pooling/source/pooling.cpp:84) on port 'gmem' (pynq_pooling/source/pooling.cpp:84) [93]  (5.840 ns)

 <State 21>: 5.840ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', pynq_pooling/source/pooling.cpp:84) on port 'gmem' (pynq_pooling/source/pooling.cpp:84) [93]  (5.840 ns)

 <State 22>: 5.840ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', pynq_pooling/source/pooling.cpp:84) on port 'gmem' (pynq_pooling/source/pooling.cpp:84) [93]  (5.840 ns)

 <State 23>: 5.840ns
The critical path consists of the following:
	bus response operation ('gmem_addr_2_resp', pynq_pooling/source/pooling.cpp:85) on port 'gmem' (pynq_pooling/source/pooling.cpp:85) [99]  (5.840 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
